project: dap
ingressClassName: nginx

imagePullSecrets:
pvc: dap

db_migration:
  app: dap-db-migration
  job:
    image: "dap/db_migration"
    replicas: 1
    imagePullPolicy: Always
    cpuLimit: 50m
    memoryLimit: 100Mi
  config:
    databaseUrl: x

frontend_web:
  app: dap-frontend-web
  deployment:
    image: "dap/frontend_web"
    replicas: 1
    imagePullPolicy: Always    
    cpuLimit: 70m
    memoryLimit: 150Mi
  service:
    port: 3000
  ingress:
    useHost: "false"
    host: dap.icipe.org
    path: /dap(/|$)(.*)
    rewriteTarget: /dap/$2
    useTls: "false"
    tls: dap-selfsigned-ca
  config:
    orign:
    bodySizeLimit: 0

backend_service:
  app: dap-backend-service
  deployment:
    image: "dap/backend_service"
    replicas: 1
    imagePullPolicy: Always
    cpuLimit: 700m
    memoryLimit: 850Mi
  service:
    port: 3000
  ingress:
    useHost: "false"
    host: dap.icipe.org
    path: /dap/v1(/|$)(.*)
    rewriteTarget: /dap/v1/$2
    useTls: "false"
    tls: dap-selfsigned-ca
  secret:
    psqlPass:
    mailPassword:
    redisPassword:
    accessRefreshToken: ZGVmYXVsdHNlY3JldA==
    encryptionKey: ZGVmYXVsdHNlY3JldA==
  config:
    domainUrl:
    port: 3000
    psqlDbname:
    psqlHost:
    psqlPort:
    psqlUser:
    psqlSslMode: disable
    psqlSchema: public
    redisHost:
    redisPort:
    redisUser:
    mailHost:
    mailPort:
    mailUserName:
    tmpDirectory: "/home/app/tmp"
    logLevel:
    basePath: ""
  volumeMounts:
  # - name:
  #   mountPath:
  #   subPath:
  volumes:
  # - name:
  #   persistentVolumeClaim:
  #     claimName:

redis:
  app: redis
  statefulset:
    image: redis:6.2.3-alpine
    replicas: 1
    imagePullPolicy: IfNotPresent
    cpuLimit: 50m
    memoryLimit: 200Mi
  service:
    port: 6379