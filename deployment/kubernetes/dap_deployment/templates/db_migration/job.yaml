apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.db_migration.app }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.db_migration.app }}
spec:
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      labels:
        app: {{ .Values.db_migration.app }}
        project: {{ .Values.project }}
  template:
    spec:
      containers:
      - name: {{ .Values.db_migration.app }}
        image: {{ .Values.db_migration.job.image }}
        imagePullPolicy: {{ .Values.db_migration.job.imagePullPolicy }}
        command: [ "./migrate.sh" ]
        envFrom:
        - configMapRef:
            name: {{ .Values.db_migration.app }}
        resources:
          limits:
            cpu: {{ .Values.db_migration.job.cpuLimit }}
            memory: {{ .Values.db_migration.job.memoryLimit }}          
          requests:
            cpu: 1m
            memory: 1Mi
      restartPolicy: Never
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ . }}
      {{- end}}
  backoffLimit: 4
